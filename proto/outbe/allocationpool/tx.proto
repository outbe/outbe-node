syntax = "proto3";
package outbe.allocationpool;

option go_package = "github.com/outbe/outbe-node/x/allocationpool/types";

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

// Msg defines the Msg service.
service Msg {

  option (cosmos.msg.v1.service) = true;

  // Msg defines the Msg service.
   rpc MintTribute(MsgMintTribute) returns (MsgMintTributeResponse);

   rpc RegisterCRA(MsgRegisterCRA) returns (MsgRegisterCRAResponse);
   rpc RegisterWallet(MsgRegisterWallet) returns (MsgRegisterWalletResponse);

}

// Msg defines the Msg service.
message MsgMintTribute {
  option (amino.name) = "outbe/MsgMintTribute";
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string contract_address = 2;
  uint64 mint_amount = 3;
  string receipt_address = 4;
}

// Msg defines the Msg service.
message MsgMintTributeResponse {}

message MsgRegisterCRA {
  option (amino.name) = "outbe/MsgRegisterCRA";
  option (cosmos.msg.v1.signer) = "authority";

  string cra_address = 1;
}

message MsgRegisterCRAResponse {}

message MsgRegisterWallet {
  option (amino.name) = "outbe/MsgRegisterWallet";
  option (cosmos.msg.v1.signer) = "authority";

  string address = 1;
}

message MsgRegisterWalletResponse {}

message MsgCRAReward {
  option (amino.name) = "outbe/MsgCRAReward";
  option (cosmos.msg.v1.signer) = "authority";

  string cra_address = 1;
}

message MsgCRARewardResponse {}

message MsgWalletReward {
  option (amino.name) = "outbe/MsgWalletReward";
  option (cosmos.msg.v1.signer) = "authority";

  string address = 1;
}

message MsgWalletRewardResponse {}

