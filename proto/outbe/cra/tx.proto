syntax = "proto3";
package outbe.cra;

option go_package = "github.com/outbe/outbe-node/x/cra/types";

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "outbe/cra/cra.proto";
import "cosmos/base/v1beta1/coin.proto";

import "cosmos/base/query/v1beta1/pagination.proto";

service Msg {
  option (cosmos.msg.v1.service) = true;

    rpc RegisterCRA(MsgRegisterCRA) returns (MsgRegisterCRAResponse);
    rpc RegisterWallet(MsgRegisterWallet) returns (MsgRegisterWalletResponse);
    rpc CRAReward(MsgCRAReward) returns (MsgCRARewardResponse);
    rpc WalletReward(MsgWalletReward) returns (MsgWalletRewardResponse);
}

message MsgRegisterCRA {
  option (amino.name) = "cra/MsgRegisterCRA";
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string cra_address = 2;
}

message MsgRegisterCRAResponse {}

message MsgRegisterWallet {
  option (amino.name) = "cra/MsgRegisterWallet";
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string address = 2;
}

message MsgRegisterWalletResponse {}

message MsgCRAReward {
  option (amino.name) = "cra/MsgCRAReward";
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string cra_address = 2;
}

message MsgCRARewardResponse {}

message MsgWalletReward {
  option (amino.name) = "cra/MsgWalletReward";
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string address = 2;
}

message MsgWalletRewardResponse {}