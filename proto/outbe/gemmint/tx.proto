syntax = "proto3";
package outbe.gemmint;

option go_package = "github.com/outbe/outbe-node/x/gemmint/types";

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "outbe/gemmint/params.proto";
import "outbe/gemmint/whitelist.proto";

import "cosmos/base/query/v1beta1/pagination.proto";

// Msg defines the x/mint Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

    rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

    rpc AddContractToWhitelist(MsgAddContractToWhitelist) returns (MsgAddContractToWhitelistResponse);

}


// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name)           = "cosmos-sdk/x/mint/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/mint parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

// Msg defines the Msg service.
message MsgAddContractToWhitelist {
  option (amino.name) = "gemmint/MsgAddContractToWhitelist";
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string contract_address = 2;
}

// Msg defines the Msg service.
message MsgAddContractToWhitelistResponse {}